// ADDDDDDD
datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @map("refreshToken") @db.Text
  access_token      String? @map("accessToken") @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @map("idToken") @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String      @id @default(cuid())
  name          String?
  email         String?     @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  PointsLog     PointsLog[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model QuestTasks {
  id          Int       @id @default(autoincrement())
  questId     Int
  mentorId    Int
  title       String
  description String
  points      Int
  dueAt       DateTime
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  deletedAt   DateTime?
}

model QuestTasksFinishers {
  id           Int      @id @default(autoincrement())
  questId      Int
  userId       Int
  gainedPoints Int
  createdAt    DateTime @default(now())
}

model PointsLog {
  id          Int      @id @default(autoincrement())
  user        User     @relation(fields: [userId], references: [id])
  userId      String
  action      String
  rowId       Int
  totalPoints Int
  createdAt   DateTime @default(now())

}
